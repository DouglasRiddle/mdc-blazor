@namespace SsExample.Pages.Examples

<p>
    <section class="component flow">
        <div class="@MdcTypography.Caption component-header">Full-screen Dialog</div>
        <MdcButton OnClick="@(async () => await dialogObject.ShowAsync())" Label="Full-screen Dialog" ButtonStyle="@MdcButtonStyle.raised" />
        <CodeSection>
            <pre rel="Blazor"><code>@(@"<MdcButton OnClick=""@(async () => await dialogObject.ShowAsync())"" Label=""Full-screen Dialog"" ButtonStyle=""MdcButtonStyle.raised"" />

<MdcDialog @ref=""dialogObject"" Title=""Full-screen Dialog"" IsFullScreen=""@true"" Style=""margin-top: 0;"">
    <MdcDialogSurface>
        <Content>
            This is a simple dialog with the full-screen parameter set. On desktop the dialog is modal with a close button. On mobile this dialog will fill the screen.
        </Content>
        <Actions>
            <MdcDialogActions>
                <MdcDialogButton OnClick=""@(async () => await dialogObject.HideAsync())"" ButtonStyle=MdcButtonStyle.raised Type=""@MdcButtonType.button"" Label=""OK"" />
            </MdcDialogActions>
        </Actions>
    </MdcDialogSurface>
</MdcDialog>

@code {
    private MdcDialog dialogObject;
}")</code></pre>
        </CodeSection>
    </section>
</p>

<MdcDialog @ref="dialogObject" Title="Full-screen Dialog" IsFullScreen="@true" Style="margin-top: 0;">
    <MdcDialogSurface>
        <Content>
            This is a simple dialog with the full-screen parameter set. On desktop the dialog is modal with a close button. On mobile this dialog will fill the screen.
        </Content>
        <Actions>
            <MdcDialogActions>
                <MdcDialogButton OnClick="@(async () => await dialogObject.HideAsync())" ButtonStyle=MdcButtonStyle.raised Type="@MdcButtonType.button" Label="OK" />
            </MdcDialogActions>
        </Actions>
    </MdcDialogSurface>
</MdcDialog>

@code {
    private MdcDialog dialogObject;
} 